name: android

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure unzip is available
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Locate ZIP (repo root)
        run: |
          ls -la
          test -f SalesMaster.zip

      - name: Unzip project
        run: unzip -o SalesMaster.zip -d project

      - name: Detect Gradle project root
        run: |
          if [ ! -f project/SalesMasterApp/settings.gradle.kts ]; then
            echo "Expected project/SalesMasterApp/* not found. Contents:"
            ls -R project
            exit 1
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set Android SDK env
        run: |
          echo "ANDROID_SDK_ROOT=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=/usr/local/lib/android/sdk" >> $GITHUB_ENV

      - name: Install Android platforms & build-tools
        shell: bash
        run: |
          set -e
          SDKMANAGER="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
          if [ ! -x "$SDKMANAGER" ]; then
            echo "Installing cmdline-tools..."
            mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
            cd "$ANDROID_SDK_ROOT/cmdline-tools"
            curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o clt.zip
            mkdir -p latest
            unzip -q -o clt.zip -d latest
          fi
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Set up Gradle (cache & tools)
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: '8.2.1'

      - name: Build Debug APK (system Gradle)
        run: gradle -p project/SalesMasterApp assembleDebug
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: SalesMaster-debug-apk
          path: project/SalesMasterApp/app/build/outputs/apk/debug/*.apk
