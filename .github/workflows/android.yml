name: build

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify ZIP exists (repo root)
        run: |
          ls -la
          if [ ! -f "SalesMaster.zip" ]; then
            echo "ERROR: SalesMaster.zip not found at repo root."
            exit 1
          fi

      - name: Unzip project
        run: |
          rm -rf project && mkdir project
          unzip -q "SalesMaster.zip" -d project
          echo "Unzipped structure (top 3 levels):"
          find project -maxdepth 3 -type f -print | sed 's/^/  /'

      - name: Detect Gradle project root
        id: findroot
        shell: bash
        run: |
          set -e
          ROOT=""
          for d in project project/* project/*/*; do
            if [ -f "$d/settings.gradle" ] || [ -f "$d/settings.gradle.kts" ] \
               || [ -f "$d/build.gradle" ] || [ -f "$d/build.gradle.kts" ]; then
              ROOT="$d"; break
            fi
          done
          if [ -z "$ROOT" ]; then
            echo "No Gradle project found under project/"; exit 1
          fi
          echo "Gradle root: $ROOT"
          echo "root=$ROOT" >> "$GITHUB_OUTPUT"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set Android SDK env
        run: |
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV

      - name: Install Android platforms & build-tools
        shell: bash
        run: |
          set -e
          SDK_ROOT="$ANDROID_SDK_ROOT"
          TOOLS="$SDK_ROOT/cmdline-tools/latest"

          mkdir -p "$SDK_ROOT"

          # Install cmdline-tools if missing
          if [ ! -x "$TOOLS/bin/sdkmanager" ]; then
            echo "Installing Android cmdline-tools..."
            mkdir -p "$SDK_ROOT/cmdline-tools"
            cd "$SDK_ROOT/cmdline-tools"
            curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o clt.zip
            mkdir -p latest
            unzip -q -o clt.zip -d latest
          fi

          echo "Accepting licenses (ignore broken pipe exit)…"
          yes | "$TOOLS/bin/sdkmanager" --licenses || true

          echo "Installing required packages…"
          "$TOOLS/bin/sdkmanager" "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Set up Gradle (cache & tools)
        uses: gradle/actions/setup-gradle@v3
        with:
          build-root-directory: ${{ steps.findroot.outputs.root }}

      - name: Fix gradlew permissions (if present)
        run: |
          cd "${{ steps.findroot.outputs.root }}"
          if [ -f "./gradlew" ]; then
            chmod +x ./gradlew
          fi

      - name: Build Debug APK
        working-directory: ${{ steps.findroot.outputs.root }}
        run: |
          set -e
          if [ -f "./gradlew" ]; then
            ./gradlew --no-daemon assembleDebug
          else
            echo "No gradlew found; using system Gradle"
            gradle --no-daemon assembleDebug
          fi

      - name: Upload Debug APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: |
            ${{ steps.findroot.outputs.root }}/**/*.apk
            !**/*-unaligned.apk
          if-no-files-found: error
